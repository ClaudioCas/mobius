#import <Cocoa/Cocoa.h>

int main(int argc, char *argv[]) {
NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
[NSApplication sharedApplication];
int style = NSClosableWindowMask | NSResizableWindowMask |
NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSMiniaturizableWindowMask;
NSWindow *win = [[NSWindow alloc] initWithContentRect:NSMakeRect(50, 50, 600, 400)
styleMask:style
backing:NSBackingStoreBuffered
defer:NO];
[win makeKeyAndOrderFront:win];
[NSApp run];

[pool release];
}

Put this in a file, for instance "test.m", compile it:
gcc test.m -o test -lobjc -Wno-import -framework Cocoa
Run it: 
./test

And voila, you have a window on the screen. No menu bar, no dock icon and no normal way to quit, though, but it's a starting point.

----------------------------------------------------------------------

Yes, you can create a GNU Make Makefile to compile an app into Cocoa.
You will have to manually create the bundle.

gcc -O0 -g -framework Cocoa main.c -o ./MyApp.app/Contents/MacOS/MyApp

----------------------------------------------------------------------

Hello
I've created some makefiles that have helped me start my investigation
into the Cocoa version of Scintilla.  I created them because I hate
relying on a GUI for my build process.  Since I am unfamiliar with
google-groups, I don't know how to add these as attachments... so Im
just going to copy paste them here.  Place both the makefiles into
scintilla/cocoa/ and run them via "make -f SciTest.mk all" (or if you
want just the Framework "make -f Framework.mk all"

I am not a makefile wizard, so corrections and criticism are welcome.

enjoy :)

*** FILE 1 Name: Framework.mk ***
### start defines ###

ARCH=-arch i386
CC=gcc -x c++ $(ARCH)
CO=gcc -x objective-c++ $(ARCH)

INST_NAME=-install_name @executable_path/../Frameworks/Sci.framework/
Versions/A/Sci
LD=gcc $(ARCH) -dynamiclib -framework Cocoa $(INST_NAME)

gDEFs=-DSCI_NAMESPACE -DSCI_LEXER

INCS=-I../src/ -I../include/ -I.
CCX=$(CC) $(gDEFs) $(INCS)
CCO=$(CO) $(gDEFs) $(INCS)

BLD=build/framebuild

SCI_LEXERS=LexAPDL.o LexASY.o LexAU3.o LexAVE.o LexAbaqus.o LexAda.o
LexAsm.o LexAsn1.o \
        LexBaan.o LexBash.o LexBasic.o LexBullant.o LexCLW.o LexCOBOL.o
LexCPP.o LexCSS.o \
        LexCaml.o LexCmake.o LexConf.o LexCrontab.o LexCsound.o LexD.o
LexEScript.o LexEiffel.o \
        LexErlang.o LexFlagship.o LexForth.o LexFortran.o LexGAP.o
LexGui4Cli.o LexHTML.o \
        LexHaskell.o LexInno.o LexKix.o LexLisp.o LexLout.o LexLua.o
LexMMIXAL.o LexMPT.o \
        LexMSSQL.o LexMagik.o LexMarkdown.o LexMatlab.o LexMetapost.o
LexMySQL.o LexNimrod.o \
        LexNsis.o LexOpal.o LexOthers.o LexPB.o LexPLM.o LexPOV.o LexPS.o
LexPascal.o LexPerl.o \
        LexPowerPro.o LexPowerShell.o LexProgress.o LexPython.o LexR.o
LexRebol.o LexRuby.o \
        LexSML.o LexSQL.o LexScriptol.o LexSmalltalk.o LexSorcus.o
LexSpecman.o LexSpice.o \
        LexTACL.o LexTADS3.o LexTAL.o LexTCL.o LexTeX.o LexVB.o LexVHDL.o
LexVerilog.o LexYAML.o

SCI_OBJ=AutoComplete.o CallTip.o CellBuffer.o CharClassify.o
ContractionState.o Decoration.o \
        Document.o DocumentAccessor.o Editor.o ExternalLexer.o Indicator.o
KeyMap.o KeyWords.o \
        LineMarker.o PerLine.o PositionCache.o PropSet.o RESearch.o
RunStyles.o ScintillaBase.o \
        Style.o StyleContext.o UniConversion.o ViewStyle.o WindowAccessor.o
XPM.o Selection.o $(SCI_LEXERS)
COC_OBJ=PlatCocoa.o ScintillaCocoa.o ScintillaView.o InfoBar.o

OBJ=$(SCI_OBJ) $(COC_OBJ)
OBJS=$(addprefix $(BLD)/,$(OBJ))

TARG=$(APP)/Versions/A/Sci
APP=$(BLD)/Sci.framework
### end defines ###

### start targets ###

all: $(BLD) $(TARG)

$(APP): $(BLD)
        -rm -rf $(APP)
        -mkdir $(APP)
        -mkdir $(APP)/Versions
        -mkdir $(APP)/Versions/A
        -mkdir $(APP)/Versions/A/Headers
        -mkdir $(APP)/Versions/A/Resources
        -ln -sf `pwd`/$(APP)/Versions/A `pwd`/$(APP)/Versions/Current
        -ln -sf `pwd`/$(APP)/Versions/A/Headers `pwd`/$(APP)/Headers
        -ln -sf `pwd`/$(APP)/Versions/A/Resources `pwd`/$(APP)/Resources
        -cp *.h $(APP)/Headers/
        -cp ../src/*.h $(APP)/Headers/
        -cp ../include/*.h $(APP)/Headers/
        -cp -R ScintillaFramework/English.lproj $(APP)/Resources
        -cp res/*.png $(APP)/Resources
        -cp ScintillaFramework/Info.plist $(APP)/Resources

$(TARG) : $(OBJS) $(APP)
        $(LD) $(OBJS) $(gDEFs) -o $(TARG) -lstdc++
        -ln `pwd`/$(TARG) `pwd`/$(APP)/Sci

$(BLD):
        -mkdir build
        -mkdir $(BLD)

clean:
        -rm -rf $(BLD)

$(BLD)/%.o : ../src/%.cxx
        $(CCX) -c ../src/$< -o $@

$(BLD)/%.o : %.mm
        $(CCO) -c $< -o $@

### get around to filling out the real dependencies later ###
$(BLD)/AutoComplete.o : ../src/AutoComplete.cxx ../src/
AutoComplete.h ../include/Platform.h

$(BLD)/CallTip.o : ../src/CallTip.cxx ../src/CallTip.h ../include/
Platform.h

### end targets ###
*** END OF FILE 1 ***

*** FILE 2: NAME: SciTest.mk ***
### start defines ###
NAME=Editor

ARCH=-arch i386
CC=gcc -x c++ $(ARCH)
CO=gcc -x objective-c++ $(ARCH)
LD=gcc $(ARCH) -framework Cocoa

gDEFs=-DSCI_NAMESPACE -DSCI_LEXER

INCS=-I../src/ -I../include/ -I.
CCX=$(CC) $(gDEFs) $(INCS)
CCO=$(CO) $(gDEFs) $(INCS)

BLD=build/SciAppBuild
TARG=$(APP)/Contents/MacOS/$(NAME)
APP=$(BLD)/$(NAME).app

all: $(BLD) $(TARG)

clean:
        -rm -rf $(BLD)

$(APP):
        -rm -rf $(APP)
        -mkdir $(APP)
        -mkdir $(APP)/Contents/
        -mkdir $(APP)/Contents/Frameworks/
        -mkdir $(APP)/Contents/MacOS/
        -mkdir $(APP)/Contents/Resources/
        -cp ScintillaTest/Info.plist $(APP)/Contents/Info.plist.bak
        -sed "s/\$${EXECUTABLE_NAME}/$(NAME)/g" < $(APP)/Contents/
Info.plist.bak > $(APP)/Contents/Info.plist.bak2
        -sed "s/\$${PRODUCT_NAME}/$(NAME)/g" < $(APP)/Contents/
Info.plist.bak2 > $(APP)/Contents/Info.plist
        -rm $(APP)/Contents/Info.plist.bak $(APP)/Contents/Info.plist.bak2
        -cp -r ScintillaTest/English.lproj $(APP)/Contents/Resources/
        /Developer/usr/bin/ibtool --errors --warnings --notices --output-
format human-readable-text \
        --compile $(APP)/Contents/Resources/English.lproj/MainMenu.nib
ScintillaTest/English.lproj/MainMenu.xib
        -cp ScintillaTest/TestData.sql $(APP)/Contents/Resources/
        -make -f Framework.mk all

$(TARG) : $(BLD)/main.o $(BLD)/AppController.o $(APP)
        -cp -R build/framebuild/Sci.framework $(APP)/Contents/Frameworks/
        $(LD) $(BLD)/main.o $(BLD)/AppController.o $(APP)/Contents/Frameworks/
Sci.framework/Sci -o $(TARG) -lstdc++


$(BLD) :
        -mkdir build
        -mkdir $(BLD)

$(BLD)/%.o : ScintillaTest/%.mm
        $(CCO) -c $< -o $@

$(BLD)/%.o : ScintillaTest/%.m
        $(CCO) -c $< -o $@

*** END OF FILE 2 ***
